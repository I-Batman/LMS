1. Create an instance

2. Become root user 

3. install docker

# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

sudo apt-get install docker-ce docker-ce-cli containerd.io


4. install docker-compose

apt install docker-compose

4 a) systemctl status docker (check and exit ctrl + z/c)
   b) cd /var/run	
c) ls -la
d) sudo chmod 777 docker.sock
 

5. install java and jenkins and mysql

sudo apt update
sudo apt install openjdk-17-jre
curl -fsSL https://pkg.jenkins.io/debian/jenkins.io-2023.key | sudo tee \
  /usr/share/keyrings/jenkins-keyring.asc > /dev/null
echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
  https://pkg.jenkins.io/debian binary/ | sudo tee \
  /etc/apt/sources.list.d/jenkins.list > /dev/null
sudo apt-get update
sudo apt-get install jenkins

docker pull mysql



6. Docker hub login. 
create an account with email. Note down the username and password of that account.

6a) docker login (terminal)
	provide above username and password of hub
	once login successful go to jenkins

7. go to jenkins ip
 instance ip:8080

sudo cat /var/lib/jenkins/secrets/initialAdminPassword
get the password from above in terminal
paste it in the jenkins login first.
create an account username password mail and click on next.

once into the dashboard
a)click on new item
b)create a new pipline with name
c)select github project below in the configure and paste the github link
d)GitHub hook trigger for GITScm polling should be enabled
e)provide the pipleine script for the project(backend/frontend)
f)save and run the build

8) spring will fail since the mysql db is not created
	docker exec -it "container_name" mysql -uroot -p
	
enter password as "root"
into mysql > show databases;
>create database "databasename";
> exit; 
into root

go to jenkins rerun the build.
